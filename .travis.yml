language: c
sudo: required
dist: trusty

# services:
#   - riak

before_install:
  # Cabal
  - travis_retry sudo add-apt-repository -y ppa:hvr/ghc
  - travis_retry sudo apt-get update
  - travis_retry sudo apt-get install cabal-install-$CABALVER ghc-$GHCVER
  - export PATH=/opt/ghc/$GHCVER/bin:/opt/cabal/$CABALVER/bin:$PATH
  # riak
  - sudo apt-get -y install build-essential libc6-dev-i386 git
  - sudo apt-get -y install erlang-nox erlang-dev erlang-reltool
  - RIAK_STRIP_V=$(echo $RIAK | sed -E 's/([0-9]+)\.([0-9]+)\.([0-9]+)/\1.\2/')
  - wget http://s3.amazonaws.com/downloads.basho.com/riak/$RIAK_STRIP_V/$RIAK/riak-$RIAK.tar.gz
  - tar zxvf riak-$RIAK.tar.gz
  - cd riak-$RIAK
  - make rel
  - sed -r --in-place -e 's/^(search) = .*/\1 = on/' rel/riak/etc/riak.conf
  - ./rel/riak/bin/riak start
  - ./rel/riak/bin/riak ping
  - ./rel/riak/bin/riak-admin wait-for-service riak_kv
  - ./rel/riak/bin/riak-admin wait-for-service yokozuna
  # CRDTs
  - ./rel/riak/bin/riak-admin bucket-type create maps '{"props":{"datatype":"map"}}'
  - ./rel/riak/bin/riak-admin bucket-type create sets '{"props":{"datatype":"set"}}'
  - ./rel/riak/bin/riak-admin bucket-type create counters '{"props":{"datatype":"counter"}}'
  - ./rel/riak/bin/riak-admin bucket-type activate maps
  - ./rel/riak/bin/riak-admin bucket-type activate sets
  - ./rel/riak/bin/riak-admin bucket-type activate counters
  # plain bucket-types
  - ./rel/riak/bin/riak-admin bucket-type create untyped-1 '{"props":{}}'
  - ./rel/riak/bin/riak-admin bucket-type create untyped-2 '{"props":{}}'
  - ./rel/riak/bin/riak-admin bucket-type activate untyped-1
  - ./rel/riak/bin/riak-admin bucket-type activate untyped-2
  # +search
  - curl -XPUT 127.0.0.1:8098/search/index/set-ix -H 'Content-Type:application/json' -d '{"schema":"_yz_default"}'
  - ./rel/riak/bin/riak-admin bucket-type update sets '{"props":{"search_index":"set-ix"}}'
  - cd -

matrix:
  include:
    - env: GHCVER=7.8.4 RIAK=2.1.3
      addons: {apt: {packages: [ghc-7.8.4], sources: [hvr-ghc]}}
    - env: GHCVER=7.8.4 RIAK=2.0.6
      addons: {apt: {packages: [ghc-7.8.4], sources: [hvr-ghc]}}
    - env: GHCVER=7.10.3 RIAK=2.1.3
      addons: {apt: {packages: [ghc-7.10.3], sources: [hvr-ghc]}}
    - env: GHCVER=7.10.3 RIAK=2.0.6
      addons: {apt: {packages: [ghc-7.10.3], sources: [hvr-ghc]}}
    - env: GHCVER=8.0.1 RIAK=2.1.3
      addons: {apt: {packages: [ghc-8.0.1], sources: [hvr-ghc]}}

install:
 - cabal --version
 - echo "$(ghc --version) [$(ghc --print-project-git-commit-id 2> /dev/null || echo '?')]"
 - travis_retry cabal update
 - cabal install --only-dependencies --enable-tests --enable-benchmarks

# Here starts the actual work to be performed for the package under test; any command which exits with a non-zero exit code causes the build to fail.
script:
 - if [ -f configure.ac ]; then autoreconf -i; fi
 - cabal configure --enable-tests --enable-benchmarks -v2  # -v2 provides useful information for debugging
 - cabal build   # this builds all libraries and executables (including tests/benchmarks)
 - cabal test
 - cabal check
 - cabal sdist   # tests that a source-distribution can be generated

# The following scriptlet checks that the resulting source distribution can be built & installed
 - export SRC_TGZ=$(cabal info . | awk '{print $2 ".tar.gz";exit}') ;
   cd dist/;
   if [ -f "$SRC_TGZ" ]; then
      cabal install --force-reinstalls "$SRC_TGZ";
   else
      echo "expected '$SRC_TGZ' not found";
      exit 1;
   fi
